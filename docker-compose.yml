version: '3.7'

networks:
  traefik:
    external: true
    name: ${TRAEFIK_PUBLIC_NETWORK}

  cluster:
    external: true
    name: ${POSTGRES_NETWORK}

volumes:
    pgmaster:
    pgslave1:
    pgslave3:
    pgbackup:
    pgadmin:

services:
    pgmaster:
        build:
            context: ./src
            dockerfile: Postgres-11-Repmgr-4.0.Dockerfile
            args:
                - "postgres_db=${POSTGRES_DB}"
                - "postgres_password=${POSTGRES_PASSWORD}"
                - "postgres_user=${POSTGRES_USER}"
                - "replication_db=${REPLICATION_DB}"
                - "replication_password=${REPLICATION_PASSWORD}"
                - "replication_user=${REPLICATION_USER}"
        environment:
            NODE_ID: 1 # Integer number of node (not required if can be extracted from NODE_NAME var, e.g. node-45 => 1045)
            NODE_NAME: node1 # Node name
            CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)
            
            PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
            REPLICATION_PRIMARY_HOST: pgmaster # That should be ignored on the same node
            
            NODE_PRIORITY: 100  # (default: 100)
            SSH_ENABLE: 1
            #database we want to use for application
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            CLEAN_OVER_REWIND: 0
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "listen_addresses:'*';max_replication_slots:5"
                                  # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                                  # used for pgpool.conf file
            #defaults:
            CLUSTER_NAME: pg_cluster # default is pg_cluster
            REPLICATION_DB: ${REPLICATION_DB}
            REPLICATION_USER: ${REPLICATION_USER}
            REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
            
        ports:
            - 5422:5432
        volumes:
            - pgmaster:/var/lib/postgresql/data
            - ./src/ssh/keys/:/tmp/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgmaster
#<<< Branch 1
    pgslave1:
        build:
            context: ./src
            dockerfile: Postgres-11-Repmgr-4.0.Dockerfile
            args:
                - "postgres_db=${POSTGRES_DB}"
                - "postgres_password=${POSTGRES_PASSWORD}"
                - "postgres_user=${POSTGRES_USER}"
                - "replication_db=${REPLICATION_DB}"
                - "replication_password=${REPLICATION_PASSWORD}"
                - "replication_user=${REPLICATION_USER}"
        environment:
            NODE_ID: 2
            NODE_NAME: node2
            CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
            SSH_ENABLE: 1
            PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
            REPLICATION_PRIMARY_HOST: pgmaster
            REPLICATION_DB: ${REPLICATION_DB}
            REPLICATION_USER: ${REPLICATION_USER}
            REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
            CLEAN_OVER_REWIND: 1
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "max_replication_slots:10" #some overrides
        ports:
            - 5441:5432
        volumes:
            - pgslave1:/var/lib/postgresql/data
            - ./src/ssh/keys:/tmp/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgslave1

#>>> Branch 1
#<<< Branch 2
    pgslave3:
        build:
            context: ./src
            dockerfile: Postgres-11-Repmgr-4.0.Dockerfile
            args:
                - "postgres_db=${POSTGRES_DB}"
                - "postgres_password=${POSTGRES_PASSWORD}"
                - "postgres_user=${POSTGRES_USER}"
                - "replication_db=${REPLICATION_DB}"
                - "replication_password=${REPLICATION_PASSWORD}"
                - "replication_user=${REPLICATION_USER}"
        environment:
            NODE_ID: 4
            NODE_NAME: node4
            CLUSTER_NODE_NETWORK_NAME: pgslave3 # (default: hostname of the node)
            SSH_ENABLE: 1
            PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
            REPLICATION_PRIMARY_HOST: 
            REPLICATION_DB: ${REPLICATION_DB}
            REPLICATION_USER: ${REPLICATION_USER}
            REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
            NODE_PRIORITY: 200  # (default: 100)
            CLEAN_OVER_REWIND: 1
            CONFIGS_DELIMITER_SYMBOL: ;
            CONFIGS: "listen_addresses:'*'"
        ports:
            - 5443:5432
        volumes:
            - pgslave3:/var/lib/postgresql/data
            - ./src/ssh/keys:/tmp/.ssh/keys
        networks:
            cluster:
                aliases:
                    - pgslave3

#>>> Branch 2
    pgbackup:
        build:
            context: ./src
            dockerfile: Barman-2.4-Postgres-11.Dockerfile
            args:
                - "postgres_db=${POSTGRES_DB}"
                - "postgres_password=${POSTGRES_PASSWORD}"
                - "postgres_user=${POSTGRES_USER}"
                - "replication_host=${REPLICATION_HOST}"
                - "replication_db=${REPLICATION_DB}"
                - "replication_password=${REPLICATION_PASSWORD}"
                - "replication_user=${REPLICATION_USER}"
        environment:
            REPLICATION_USER: ${REPLICATION_USER}
            REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
            REPLICATION_HOST: ${REPLICATION_HOST}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            SSH_ENABLE: 1
            BACKUP_SCHEDULE: "*/30 */5 * * *"
        volumes:
            - pgbackup:/var/backups
            - ./src/ssh/keys:/tmp/.ssh/keys
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}"
            - "traefik.tcp.routers.pgbackup.entrypoints=ssh"
            - "traefik.tcp.routers.pgbackup.rule=HostSNI(`*`)"
            - "traefik.tcp.services.pgbackup.loadbalancer.server.port=22"
        networks:
            traefik:
            cluster:
                aliases:
                    - pgbackup
    pgpool:
        build:
            context: ./src
            dockerfile: Pgpool-3.7-Postgres-11.Dockerfile
            args:
                - "postgres_db=${POSTGRES_DB}"
                - "postgres_password=${POSTGRES_PASSWORD}"
        environment:
            PCP_USER: ${PCP_USER}
            PCP_PASSWORD: ${PCP_PASSWORD}
            WAIT_BACKEND_TIMEOUT: 60

            CHECK_USER: ${CHECK_USER}
            CHECK_PASSWORD: ${CHECK_PASSWORD}
            CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy

            SSH_ENABLE: 1
            DB_USERS: ${POSTGRES_USER}:${POSTGRES_PASSWORD} # in format user:password[,user:password[...]]
            BACKENDS: "0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave1::::,3:pgslave3::::"
                      # in format num:host:port:weight:data_directory:flag[,...]
                      # defaults:
                      #   port: 5432
                      #   weight: 1
                      #   data_directory: /var/lib/postgresql/data
                      #   flag: ALLOW_TO_FAILOVER
            REQUIRE_MIN_BACKENDS: 3 # minimal number of backends to start pgpool (some might be unreachable)
            CONFIGS: "num_init_children:250,max_pool:4"
                      # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                      # used for pgpool.conf file
        ports:
            - ${PGPOOL_LISTEN_PORT}:5432
            - 127.0.0.1:9898:9898 # PCP
        volumes:
            - ./src/ssh/keys:/tmp/.ssh/keys
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}"
            - "traefik.tcp.routers.pgpool.entrypoints=pg"
            - "traefik.tcp.routers.pgpool.rule=HostSNI(`*`)"
            - "traefik.tcp.routers.pgpool.service=pgpool"
            - "traefik.tcp.services.pgpool.loadbalancer.server.port=5432"
        networks:
            traefik:
            cluster:
                aliases:
                    - pgpool
    pgadmin:
        image: dpage/pgadmin4
        depends_on:
            - pgpool
        ports:
            - "${PGADMIN_LISTEN_PORT}:5050"
        environment:
            PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - pgadmin:/var/lib/pgadmin/data
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK}"
            - "traefik.http.routers.pgadmin.entrypoints=websecure"
            - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${SUBDOMAIN}.${DOMAIN}`)"
            - "traefik.http.routers.pgadmin.tls.certresolver=cloudflare"
            - "traefik.http.services.pgadmin.loadbalancer.server.port=5050"
        networks:
            traefik:
            cluster:
                aliases:
                    - pgadmin
